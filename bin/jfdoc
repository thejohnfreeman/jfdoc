#!/usr/bin/env node

/**
 * JavaScript documentation generator.
 *
 * @author John Freeman
 */

var requirejs = require("requirejs");

requirejs.config({
  nodeRequire : require
});

requirejs(["fs", "../lib/documenter"],
  function (fs, Documenter) {

  var parseOptions = function parseOptions(options, config) {
    var m;
    while (m = options[0].match(/^-([\w-]+)=(.*)$/)) {
      console.log("command line option: " + m[1] + " = " + m[2]);
      options.shift();
      switch (m[1]) {
        case "d": config.docDir = m[2]; break;
        case "t": config.templateDir = m[2]; break;
        case "-": return;
      }
    }
  };

  /* Configuration defaults. */
  var config = {
    docDir      : "doc",
    templateDir : __dirname + "/../templates"
  };

  var options = process.argv.slice(2);
  parseOptions(options, config);
  /* Trailing options are considered files. */
  var filenames = options;

  var doccer = new Documenter(config);

  filenames.forEach(function (filename) {
    try {
      var source = fs.readFileSync(filename, "utf8");
    } catch (e) {
      console.error("could not open '" + filename + "': " + e);
      return;
    }

    doccer.add(filename, source);
  });

  doccer.flush();

});

